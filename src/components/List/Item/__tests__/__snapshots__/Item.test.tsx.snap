// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Item -> Snapshot -> Deve corresponder ao componente com as props default 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "row",
      "justifyContent": "center",
      "marginBottom": 16,
      "paddingHorizontal": 32,
      "width": "100%",
    }
  }
  testID="ITEM_CONTAINER_TEST_ID"
>
  <Text
    style={
      Array [
        Object {
          "color": "#FFF",
          "fontSize": 14,
        },
        undefined,
      ]
    }
    testID="ITEM_LABEL_TEST_ID"
  />
  <View
    accessibilityState={
      Object {
        "disabled": true,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
        "opacity": 1,
      }
    }
    testID="ITEM_ICON_BUTTON_TEST_ID"
  >
    <Text
      allowFontScaling={false}
      selectable={false}
      style={
        Array [
          Object {
            "color": "#FFF",
            "fontSize": 16,
          },
          undefined,
          Object {
            "fontFamily": "FontAwesome5Free-Solid",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {
            "fontWeight": "900",
          },
        ]
      }
      testID="ICON_BUTTON_ICON_TEST_ID"
    >
      
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      }
    }
    testID="ITEM_TEMP_INDICATOR_TEST_ID"
  >
    <Text
      style={
        Array [
          Object {
            "color": "#FFF",
            "fontSize": 16,
          },
          undefined,
        ]
      }
      testID="TEMP_INDICATOR_MIN_TEST_ID"
    >
      0
      °
    </Text>
    <LinearGradient
      colors={
        Array [
          "#b6f29b",
          "#ff6a38",
        ]
      }
      end={
        Object {
          "x": 1,
          "y": 0,
        }
      }
      start={
        Object {
          "x": 0,
          "y": 0,
        }
      }
      style={
        Object {
          "borderRadius": 999,
          "height": 6,
          "marginHorizontal": 8,
          "width": 80,
        }
      }
      testID="TEMP_INDICATOR_GRADIENT_TEST_ID"
    />
    <Text
      style={
        Array [
          Object {
            "color": "#FFF",
            "fontSize": 16,
          },
          undefined,
        ]
      }
      testID="TEMP_INDICATOR_MAX_TEST_ID"
    >
      0
      °
    </Text>
  </View>
</View>
`;

exports[`Item -> Snapshot -> Deve corresponder ao componente com as props mais utilizadas 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "row",
      "justifyContent": "center",
      "marginBottom": 16,
      "paddingHorizontal": 32,
      "width": "100%",
    }
  }
  testID="ITEM_CONTAINER_TEST_ID"
>
  <Text
    style={
      Array [
        Object {
          "color": "#FFF",
          "fontSize": 14,
        },
        undefined,
      ]
    }
    testID="ITEM_LABEL_TEST_ID"
  />
  <View
    accessibilityState={
      Object {
        "disabled": true,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
        "opacity": 1,
      }
    }
    testID="ITEM_ICON_BUTTON_TEST_ID"
  >
    <Text
      allowFontScaling={false}
      selectable={false}
      style={
        Array [
          Object {
            "color": "#FFF",
            "fontSize": 16,
          },
          undefined,
          Object {
            "fontFamily": "FontAwesome5Free-Solid",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {
            "fontWeight": "900",
          },
        ]
      }
      testID="ICON_BUTTON_ICON_TEST_ID"
    >
      
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      }
    }
    testID="ITEM_TEMP_INDICATOR_TEST_ID"
  >
    <Text
      style={
        Array [
          Object {
            "color": "#FFF",
            "fontSize": 16,
          },
          undefined,
        ]
      }
      testID="TEMP_INDICATOR_MIN_TEST_ID"
    >
      0
      °
    </Text>
    <LinearGradient
      colors={
        Array [
          "#b6f29b",
          "#ff6a38",
        ]
      }
      end={
        Object {
          "x": 1,
          "y": 0,
        }
      }
      start={
        Object {
          "x": 0,
          "y": 0,
        }
      }
      style={
        Object {
          "borderRadius": 999,
          "height": 6,
          "marginHorizontal": 8,
          "width": 80,
        }
      }
      testID="TEMP_INDICATOR_GRADIENT_TEST_ID"
    />
    <Text
      style={
        Array [
          Object {
            "color": "#FFF",
            "fontSize": 16,
          },
          undefined,
        ]
      }
      testID="TEMP_INDICATOR_MAX_TEST_ID"
    >
      0
      °
    </Text>
  </View>
</View>
`;
